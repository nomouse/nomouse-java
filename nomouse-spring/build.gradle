apply plugin: 'war'
apply plugin: 'jetty'

dependencies {
    compile project(':nomouse-common')

    compile("mysql:mysql-connector-java:${mysqlJdbcVersion}")
    compile("org.apache.tomcat:tomcat-jdbc:${tomcatJdbcVersion}")

    compile("org.springframework:spring-core:${springVersion}")
    compile("org.springframework:spring-beans:${springVersion}")
    compile("org.springframework:spring-context:${springVersion}")

    compile("org.aspectj:aspectjrt:1.7.4")

    compile("org.springframework:spring-aop:${springVersion}")
    compile("org.springframework:spring-tx:${springVersion}")
    compile("org.springframework:spring-jdbc:${springVersion}")
    compile("org.springframework:spring-orm:${springVersion}")

    compile("javax.validation:validation-api:1.1.0.Final")
    compile("org.hibernate:hibernate-validator:4.3.2.Final")

    providedCompile("javax.servlet:javax.servlet-api:3.0.1")
    providedCompile("javax.servlet.jsp:jsp-api:2.2")

    providedRuntime("org.eclipse.jetty.aggregate:jetty-webapp:${jettyVersion}")
    providedRuntime("org.eclipse.jetty:jetty-jsp:${jettyVersion}")

    compile("org.springframework:spring-web:${springVersion}")
    compile("org.springframework:spring-webmvc:${springVersion}")

    //compile("org.springframework.data:spring-data-jpa:${springJpaVersion}")
    //compile("org.hibernate:hibernate-core:${hibernateVersion}")
    //compile("org.hibernate:hibernate-entitymanager:${hibernateVersion}")
    //compile("org.hibernate:hibernate-validator:${hibernateValidatorVersion}")
    //compile("org.hibernate.javax.persistence:hibernate-jpa-2.0-api:${hibernateJpaVersion}")

    //compile("com.whalin:Memcached-Java-Client:${memcachedVersion}")

    //compile("redis.clients:jedis:${jedisVersion}")
    //compile("org.springframework.data:spring-data-redis:${springRedisVersion}")

    //compile("org.mongodb:mongo-java-driver:${mongodbVersion}")
    //compile("org.springframework.data:spring-data-mongodb:${springMongodbVersion}") {
    //    transitive = false
    //}

    //compile("org.apache.solr:solr-solrj:${solrjVersion}")
    //compile("org.springframework.data:spring-data-solr:${springSolrVersion}") {
    //    transitive = false
    //}

    //compile "org.glassfish.jersey.core:jersey-server:${jerseyVersion}"
    //compile "org.glassfish.jersey.core:jersey-client:${jerseyVersion}"
    //compile "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}"
    //compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
    //compile "org.glassfish.jersey.media:jersey-media-multipart:${jerseyVersion}"
    //compile "org.glassfish.hk2:spring-bridge:2.2.0"
    //compile("org.glassfish.jersey.ext:jersey-spring3:${jerseyVersion}") {
    //    transitive = false
    //}

    //compile "org.aspectj:aspectjweaver:1.8.1"

    //compile "commons-fileupload:commons-fileupload:1.3.1"

    testCompile("org.springframework:spring-test:${springVersion}")
}

jettyRun {
    httpPort = 8080
    stopPort = 8089
    reload = "automatic"
    scanIntervalSeconds = 1
} 
  
	
